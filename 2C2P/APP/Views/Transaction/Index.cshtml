@model List<APP.Models.AppTransaction>
@{
    ViewData["Title"] = "Transaction Management";
}

<div class="container mt-5">
    <h4 class="text-center mb-5">Transaction Management</h4>

    <!-- Upload Form -->
    <div class="mb-4">
        <h5>Upload Transaction File</h5>
        <form method="post" enctype="multipart/form-data" asp-action="Upload">
            <div class="input-group">
                <input type="file" class="form-control" name="file" required />
                <button class="btn btn-success" type="submit">Upload</button>
            </div>
            <p class="mt-2 text-success">@ViewBag.Message</p>
        </form>
    </div>

    <!-- Search Form -->
    <div class="mb-5">
        <h5>Search Transactions</h5>
        <form method="get" asp-action="Search" class="row g-3 align-items-center">
            <div class="col-md-2">
                <select name="searchType" class="form-select" id="searchType" onchange="toggleSearchFields()">
                    <option value="all">All</option>
                    <option value="currency">Currency</option>
                    <option value="date">Date Range</option>
                    <option value="status">Status</option>
                </select>
            </div>

            <!-- Default Search Input -->
            <div class="col-md-7" id="defaultSearchInput">
                <input type="text" name="searchInput" class="form-control" id="searchInput" placeholder="Enter value..." disabled />
            </div>

            <!-- Date Range Inputs -->
            <div class="col-md-7 d-none" id="dateRangeInputs">
                <div class="row g-2">
                    <div class="col">
                        <input type="text" class="form-control" id="startDate" name="startDate" placeholder="Start Date and Time" disabled />
                    </div>
                    <div class="col">
                        <input type="text" class="form-control" id="endDate" name="endDate" placeholder="End Date and Time" disabled />
                    </div>
                </div>
            </div>

            <div class="col-md-3">
                <button type="submit" class="btn btn-primary w-100">Search</button>
            </div>
        </form>
    </div>

    @if (Model != null && Model.Count > 0)
    {
            <div class="table-responsive">
                <table class="table table-bordered table-hover">
                    <thead class="table-primary">
                        <tr>
                            <th>ID</th>
                            <th>Payment</th>
                            <th>Status</th>
                        </tr>
                    </thead>
                    <tbody>
                    @foreach (var transaction in Model)
                    {
                                <tr>
                                    <td>@transaction.TransactionId</td>
                                    <td>@transaction.Payment</td>
                                    <td>@transaction.Status</td>
                                </tr>
                    }
                    </tbody>
                </table>
            </div>
            <!-- Pagination Controls -->
            <nav aria-label="Page navigation example">
                <ul class="pagination justify-content-end">
                @for (int i = 1; i <= ViewBag.TotalPages; i++)
                {
                            <li class="page-item @(i == ViewBag.CurrentPage ? "active" : "")">
                                <a class="page-link" href="?pageNumber=@i">@i</a>
                            </li>
                }
                </ul>
            </nav>
    }
    else
    {
            <p class="text-center mt-4">No transactions found.</p>
    }
</div>

@section Scripts {
        <script>

        document.addEventListener('DOMContentLoaded', function () {
            // SweetAlert Notification สำหรับแสดงข้อผิดพลาด
            var errorMessage = "@TempData["ErrorMessage"]";
            if (errorMessage) {                   
                    errorMessage = errorMessage.replace(/\.\s*/g, '.<br>');
                    Swal.fire({
                        icon: 'error',
                        title: 'Invalid Date Range',
                        html: `<span style="color: red; font-size: smaller;">${errorMessage}</span>`,
                        confirmButtonText: 'OK'
                    });
            }            
            // SweetAlert Notification
            var message = "@TempData["Message"]";
            var status = "@TempData["Status"]";
            if (message) {
                message = message.replace(/;\s*/g, '<br>');
                Swal.fire({
                    icon: status === "success" ? 'success' : 'error',
                    title: status === "success" ? 'Upload Successful' : 'Upload Failed',
                    html: `<span style="font-size: smaller; ${status === "error" ? 'color: red;' : ''}">${message}</span>`,
                    confirmButtonText: 'OK'
                });
            }
            const searchForm = document.querySelector('form[asp-action="Search"]');
            if (searchForm) {
                searchForm.addEventListener('submit', function () {
                    const searchType = document.getElementById('searchType').value;
                    if (searchType === 'date') {
                        document.getElementById('startDate').removeAttribute('disabled');
                        document.getElementById('endDate').removeAttribute('disabled');
                    }
                });
            }
        });            
            function toggleSearchFields() {
                const searchType = document.getElementById('searchType').value;
                const searchInputDiv = document.getElementById('defaultSearchInput');
                const searchInput = document.getElementById('searchInput');
                const dateRangeInputs = document.getElementById('dateRangeInputs');
                const startDateInput = document.getElementById('startDate');
                const endDateInput = document.getElementById('endDate');

                if(searchType === 'all') {
                    searchInputDiv.classList.remove('d-none');
                    searchInput.value = '';
                    searchInput.setAttribute('disabled', 'disabled');

                    dateRangeInputs.classList.add('d-none');
                    startDateInput.value = '';
                    endDateInput.value = '';
                    startDateInput.setAttribute('disabled', 'disabled');
                    endDateInput.setAttribute('disabled', 'disabled');
                } else if (searchType === 'date') {
                    searchInputDiv.classList.add('d-none');
                    searchInput.value = '';
                    searchInput.setAttribute('disabled', 'disabled');

                    dateRangeInputs.classList.remove('d-none');
                    startDateInput.removeAttribute('disabled');
                    endDateInput.removeAttribute('disabled');
                } else {
                    searchInputDiv.classList.remove('d-none');
                    searchInput.removeAttribute('disabled');

                    dateRangeInputs.classList.add('d-none');
                    startDateInput.value = '';
                    endDateInput.value = '';
                    startDateInput.setAttribute('disabled', 'disabled');
                    endDateInput.setAttribute('disabled', 'disabled');
                }

            }



            // Initialize Flatpickr for Date Range Inputs
            flatpickr("#startDate", {
                enableTime: true,
                dateFormat: "Y-m-d H:i",
            });

            flatpickr("#endDate", {
                enableTime: true,
                dateFormat: "Y-m-d H:i",
            });

            document.addEventListener('DOMContentLoaded', function () {
                toggleSearchFields();
            });

        </script>

}
